<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>FairyOwO 的 Blog</title><link>https://FairyOwO.github.io</link><description>记录一些琐事</description><copyright>FairyOwO 的 Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://FairyOwO.github.io</link></image><lastBuildDate>Fri, 22 Nov 2024 09:40:33 +0000</lastBuildDate><managingEditor>FairyOwO 的 Blog</managingEditor><ttl>60</ttl><webMaster>FairyOwO 的 Blog</webMaster><item><title>使用 k3s 搭建 k8s 集群(使用国内镜像)</title><link>https://FairyOwO.github.io/post/shi-yong-%20k3s%20-da-jian-%20k8s%20-ji-qun-%28-shi-yong-guo-nei-jing-xiang-%29.html</link><description>&gt; 历史文章搬运&#13;
&#13;
需求之初是想对年抛机, 月抛机进行统一的管理, 方便部署相关镜像, 类似于史莱姆的结构(拿到新的机器, 加入集群, 机器时间过期, 自动离线, 伸缩重启分配全由集群本身管理)&#13;
&#13;
使用系统为 Debian&#13;
&#13;
## 服务器搭建&#13;
&#13;
### 搭建集群&#13;
&#13;
主 server sh脚本&#13;
&lt;details&gt;&lt;summary&gt;Details&lt;/summary&gt;&#13;
&lt;p&gt;&#13;
&#13;
```sh&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&#13;
&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&#13;
&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&#13;
&#13;
# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换&#13;
deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware&#13;
deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware' &gt; /etc/apt/sources.list&#13;
&#13;
apt update&#13;
&#13;
curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \&#13;
  INSTALL_K3S_MIRROR=cn \&#13;
  sh -s - server \&#13;
  --cluster-init \&#13;
  --system-default-registry=registry.cn-hangzhou.aliyuncs.com&#13;
&#13;
cat /var/lib/rancher/k3s/server/token&#13;
&#13;
cat &gt;&gt; /etc/rancher/k3s/registries.yaml &lt;&lt; EOF&#13;
mirrors:&#13;
  docker.io:&#13;
    endpoint:&#13;
      - 'https://dockerproxy.net'&#13;
      - 'https://registry.cn-hangzhou.aliyuncs.com/'&#13;
      - 'https://mirror.ccs.tencentyun.com'&#13;
  k8s.gcr.io:&#13;
    endpoint:&#13;
      - 'https://k8s.dockerproxy.net'&#13;
      - 'https://registry.aliyuncs.com/google_containers'&#13;
  ghcr.io:&#13;
    endpoint:&#13;
      - 'https://ghcr.dockerproxy.net'&#13;
      - 'https://ghcr.m.daocloud.io/'&#13;
  gcr.io:&#13;
    endpoint:&#13;
      - 'https://gcr.dockerproxy.net'&#13;
      - 'https://gcr.m.daocloud.io/'&#13;
  quay.io:&#13;
    endpoint:&#13;
      - 'https://quay.dockerproxy.net'&#13;
      - 'https://quay.tencentcloudcr.com/'&#13;
  registry.k8s.io:&#13;
    endpoint:&#13;
      - 'https://k8s.dockerproxy.net'&#13;
      - 'https://registry.aliyuncs.com/v2/google_containers'&#13;
EOF&#13;
systemctl restart k3s&#13;
```&#13;
&#13;
&lt;/p&gt;&#13;
&lt;/details&gt; &#13;
&#13;
副 server sh脚本&#13;
&#13;
&lt;details&gt;&lt;summary&gt;Details&lt;/summary&gt;&#13;
&lt;p&gt;&#13;
&#13;
```sh&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&#13;
&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&#13;
&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&#13;
&#13;
# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换&#13;
deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware&#13;
deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware' &gt; /etc/apt/sources.list&#13;
&#13;
apt update&#13;
&#13;
curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \&#13;
  INSTALL_K3S_MIRROR=cn \&#13;
  sh -s - server \&#13;
  --cluster-init \&#13;
  --system-default-registry=registry.cn-hangzhou.aliyuncs.com&#13;
&#13;
cat /var/lib/rancher/k3s/server/token&#13;
&#13;
cat &gt;&gt; /etc/rancher/k3s/registries.yaml &lt;&lt; EOF&#13;
mirrors:&#13;
  docker.io:&#13;
    endpoint:&#13;
      - 'https://dockerproxy.net'&#13;
      - 'https://registry.cn-hangzhou.aliyuncs.com/'&#13;
      - 'https://mirror.ccs.tencentyun.com'&#13;
  k8s.gcr.io:&#13;
    endpoint:&#13;
      - 'https://k8s.dockerproxy.net'&#13;
      - 'https://registry.aliyuncs.com/google_containers'&#13;
  ghcr.io:&#13;
    endpoint:&#13;
      - 'https://ghcr.dockerproxy.net'&#13;
      - 'https://ghcr.m.daocloud.io/'&#13;
  gcr.io:&#13;
    endpoint:&#13;
      - 'https://gcr.dockerproxy.net'&#13;
      - 'https://gcr.m.daocloud.io/'&#13;
  quay.io:&#13;
    endpoint:&#13;
      - 'https://quay.dockerproxy.net'&#13;
      - 'https://quay.tencentcloudcr.com/'&#13;
  registry.k8s.io:&#13;
    endpoint:&#13;
      - 'https://k8s.dockerproxy.net'&#13;
      - 'https://registry.aliyuncs.com/v2/google_containers'&#13;
EOF&#13;
systemctl restart k3s&#13;
```&#13;
&#13;
&lt;/p&gt;&#13;
&lt;/details&gt; &#13;
&#13;
client sh脚本&#13;
&#13;
&lt;details&gt;&lt;summary&gt;Details&lt;/summary&gt;&#13;
&lt;p&gt;&#13;
&#13;
```sh&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware&#13;
&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware&#13;
&#13;
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&#13;
deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware&#13;
&#13;
# 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换&#13;
deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware&#13;
deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware' &gt; /etc/apt/sources.list&#13;
&#13;
apt update&#13;
&#13;
curl -sfL https://rancher-mirror.rancher.cn/k3s/k3s-install.sh | \&#13;
  INSTALL_K3S_MIRROR=cn \&#13;
  K3S_URL=https://ip:6443 \&#13;
  K3S_TOKEN=your_token \&#13;
  sh -&#13;
&#13;
mkdir -p /etc/rancher/k3s&#13;
cat &gt;&gt; /etc/rancher/k3s/registries.yaml &lt;&lt; EOF&#13;
mirrors:&#13;
  docker.io:&#13;
    endpoint:&#13;
      - 'https://dockerproxy.net'&#13;
      - 'https://registry.cn-hangzhou.aliyuncs.com/'&#13;
      - 'https://mirror.ccs.tencentyun.com'&#13;
  k8s.gcr.io:&#13;
    endpoint:&#13;
      - 'https://k8s.dockerproxy.net'&#13;
      - 'https://registry.aliyuncs.com/google_containers'&#13;
  ghcr.io:&#13;
    endpoint:&#13;
      - 'https://ghcr.dockerproxy.net'&#13;
      - 'https://ghcr.m.daocloud.io/'&#13;
  gcr.io:&#13;
    endpoint:&#13;
      - 'https://gcr.dockerproxy.net'&#13;
      - 'https://gcr.m.daocloud.io/'&#13;
  quay.io:&#13;
    endpoint:&#13;
      - 'https://quay.dockerproxy.net'&#13;
      - 'https://quay.tencentcloudcr.com/'&#13;
  registry.k8s.io:&#13;
    endpoint:&#13;
      - 'https://k8s.dockerproxy.net'&#13;
      - 'https://registry.aliyuncs.com/v2/google_containers'&#13;
EOF&#13;
systemctl restart k3s-agent&#13;
```&#13;
&#13;
&lt;/p&gt;&#13;
&lt;/details&gt; &#13;
&#13;
&gt; 注: k3s 搭建集群的方案需要保证主服务器不离线, 否则整个集群会离线, 考虑到k3s占用低, 机器一般是性能不高的类型, 我也有长期续费的服务器, 故使用这个方案&#13;
&#13;
在主server服务器使用&#13;
&#13;
```sh&#13;
kubectl get nodes -A&#13;
```&#13;
出现每台机子的信息, 代表集群内部网络通信没问题&#13;
&#13;
在主server服务器使用&#13;
```sh&#13;
kubectl get pods --all-namespaces&#13;
```&#13;
在所有服务在 `RUNNING` 状态时, 为安装成功 (这些服务都是内部通信与均衡负载的镜像), 如果是卡在 `container creating`, 则安装失败, 原因是镜像没正确配置&#13;
&#13;
### 安装helm (虽然不知道干什么用, 集群内也自带一个helm)&#13;
&#13;
1. 手动安装&#13;
    1. 下载需要的版本 [下载地址](https://github.com/helm/helm/releases)&#13;
    2. 解压, 上传到服务器, chmod给执行权限&#13;
    3. 移动到环境变量的目录中&#13;
        ```sh&#13;
        mv helm /usr/local/bin/helm&#13;
        ```&#13;
2. 使用脚本安装&#13;
    ```sh&#13;
    https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash&#13;
    ```&#13;
&#13;
## 面板安装&#13;
&#13;
为了简单, 面板选择的是 kubepi&#13;
&#13;
[文档](https://github.com/1Panel-dev/KubePi/wiki/2%E3%80%81%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2#kubernetes)&#13;
&#13;
这里选择的是非持久化部署, 在直接部署在刚刚建好的集群之中&#13;
&#13;
&gt; 持久化部署会有莫名其妙的分配问题, 应该是跟分配本地空间有关系, 我也不需要持久化集群信息(因为只有一个集群), 所以没什么关系&#13;
&#13;
```sh&#13;
# 安装&#13;
sudo kubectl apply -f https://raw.githubusercontent.com/1Panel-dev/KubePi/master/docs/deploy/kubectl/kubepi.yaml&#13;
```&#13;
&#13;
安装完成后, 根据安装教程, 获取访问地址&#13;
&#13;
```sh&#13;
# 获取 NodeIp&#13;
export NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[0].address}')&#13;
# 获取 NodePort&#13;
export NODE_PORT=$(kubectl -n kube-system get services kubepi -o jsonpath='{.spec.ports[0].nodePort}')&#13;
# 获取 Address&#13;
echo http://$NODE_IP:$NODE_PORT&#13;
```&#13;
&#13;
&gt; 注: 内网组机子的时候这里会是内网地址, 需要使用端口转发转发到 `0.0.0.0` 之后才能外网访问&#13;
&gt; ```sh&#13;
&gt; kubectl port-forward --address 0.0.0.0 kubepi-d8477f9d8-drthz -n kube-system 2999:80&#13;
&gt; ```&#13;
&gt; 此命令不会中断, 会持续运行&#13;
&#13;
登陆系统&#13;
&#13;
```text&#13;
地址: http://$NODE_IP:$NODE_PORT&#13;
用户名: admin&#13;
密码: kubepi&#13;
```&#13;
&#13;
登陆后记得修改密码&#13;
&#13;
导入集群&#13;
&#13;
在主服务器, 获取&#13;
&#13;
```sh&#13;
cd /etc/rancher/k3s&#13;
cat k3s.yaml&#13;
```&#13;
在 kubepi 导入集群, 认证模式选择 kubeconfig文件, 把这个文件复制进去&#13;
&#13;
在集群配置中, 配置一下网络, 使之可以直接通过外网端口访问&#13;
&#13;
具体配置流程忘了, 此方法由同事指点&#13;
&#13;
## 部署项目&#13;
&#13;
待研究更新。</description><guid isPermaLink="true">https://FairyOwO.github.io/post/shi-yong-%20k3s%20-da-jian-%20k8s%20-ji-qun-%28-shi-yong-guo-nei-jing-xiang-%29.html</guid><pubDate>Fri, 22 Nov 2024 09:34:51 +0000</pubDate></item><item><title>待阅读</title><link>https://FairyOwO.github.io/post/dai-yue-du.html</link><description>## 对强化学习进行系统性的学习&#13;
1. [Reinforcement Learning: An Introduction](https://rl.qiwihui.com/zh-cn/latest/) 强化学习导论&#13;
2. [Openai Spinning Up](https://spinningup.qiwihui.com/zh-cn/latest/) OpenAI 深度强化学习&#13;
&#13;
## 知乎 大模型相关&#13;
&#13;
## 苏剑林博客。</description><guid isPermaLink="true">https://FairyOwO.github.io/post/dai-yue-du.html</guid><pubDate>Fri, 22 Nov 2024 08:44:27 +0000</pubDate></item><item><title>Test</title><link>https://FairyOwO.github.io/post/Test.html</link><description>这是一个测试!&#13;
This is a test!。</description><guid isPermaLink="true">https://FairyOwO.github.io/post/Test.html</guid><pubDate>Fri, 22 Nov 2024 03:26:34 +0000</pubDate></item></channel></rss>